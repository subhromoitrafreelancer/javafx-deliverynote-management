plugins {
    id 'java'
    id 'application'
    id 'org.javamodularity.moduleplugin' version '1.8.12'
    id 'org.openjfx.javafxplugin' version '0.0.13'
    id 'org.beryx.jlink' version '2.25.0'
}

group 'com.aarsoma'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

ext {
    junitVersion = '5.10.2'
}

sourceCompatibility = '17'
targetCompatibility = '17'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

application {
    mainModule = 'com.aarsoma.deliverynote'
    mainClass = 'com.aarsoma.deliverynote.Main'
}

javafx {
    version = '17.0.6'
    modules = ['javafx.controls', 'javafx.fxml', 'javafx.web', 'javafx.swing']
}

dependencies {
    implementation('org.controlsfx:controlsfx:11.2.1')
    implementation('com.dlsc.formsfx:formsfx-core:11.6.0') {
        exclude(group: 'org.openjfx')
    }
    implementation('org.kordamp.ikonli:ikonli-javafx:12.3.1')
    /*implementation('eu.hansolo:tilesfx:21.0.3') {
        exclude(group: 'org.openjfx')
    }*/

    // Database
    implementation 'com.h2database:h2:2.2.224'

    // Report generation and printing
    //implementation 'net.sf.jasperreports:jasperreports:6.20.5'
    //implementation 'org.apache.pdfbox:pdfbox:2.0.28'

    // Utilities
    implementation 'org.projectlombok:lombok:1.18.28'
    annotationProcessor 'org.projectlombok:lombok:1.18.28'


    testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")
}

test {
    useJUnitPlatform()
}
// Configure resources
processResources {
    from('src/main/java') {
        include '**/*.fxml'
        include '**/*.css'
        include '**/*.jasper'
        include '**/*.jrxml'
        include '**/*.png'
        include '**/*.jpg'
    }
}

jlink {
    imageZip = project.file("${buildDir}/distributions/app-${javafx.platform.classifier}.zip")
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
    launcher {
        name = 'AarsomaDeliveryNoteSystem'
    }
    jpackage {
        outputDir = "dist"
        imageName = "AarsomaDeliveryNoteSystem"
        skipInstaller = false
        installerName = "AarsomaDeliveryNoteSystem-Installer"

        // Windows specific
        installerOptions = [
                '--win-dir-chooser',
                '--win-menu',
                '--win-shortcut',
                '--win-per-user-install',
                '--vendor', 'Aarsoma Graphics',
                '--app-version', '1.0.0',
                '--win-menu-group', 'Aarsoma Graphics',
                '--description', 'Delivery Note System for Aarsoma Graphics',
                '--copyright', 'Aarsoma Graphics Â© 2025',
                '--name', 'Aarsoma Delivery Note System'
        ]
    }
}

// Customize manifests
jar {
    manifest {
        attributes(
                'Implementation-Title': 'Aarsoma Delivery Note System',
                'Implementation-Version': '1.0',
                'Main-Class': application.mainClass,
                'Class-Path': configurations.runtimeClasspath.collect { it.getName() }.join(' ')
        )
    }
}

jlinkZip {
    group = 'distribution'
}

// Task to run the application
tasks.register('runJavaApp', JavaExec) {
    description = 'Runs the application'
    group = 'application'

    mainClass = application.mainClass
    classpath = sourceSets.main.runtimeClasspath

    // Add JVM arguments if needed
    // jvmArgs = ['-Xms512m', '-Xmx1g']
}

// Task to create windows executable
tasks.register('createWindowsExe') {
    dependsOn 'jpackage'
    description = 'Creates a Windows executable'
    group = 'distribution'
}
